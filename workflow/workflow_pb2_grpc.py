# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from google.protobuf import empty_pb2 as google_dot_protobuf_dot_empty__pb2
import workflow_pb2 as workflow__pb2


class WorkFlowStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.CreateRole = channel.unary_unary(
                '/main.WorkFlow/CreateRole',
                request_serializer=workflow__pb2.Role.SerializeToString,
                response_deserializer=workflow__pb2.StatusResponse.FromString,
                )
        self.UpdateRole = channel.unary_unary(
                '/main.WorkFlow/UpdateRole',
                request_serializer=workflow__pb2.Role.SerializeToString,
                response_deserializer=workflow__pb2.StatusResponse.FromString,
                )
        self.GetRole = channel.unary_unary(
                '/main.WorkFlow/GetRole',
                request_serializer=workflow__pb2.RoleId.SerializeToString,
                response_deserializer=workflow__pb2.RoleDetails.FromString,
                )
        self.GetAllRole = channel.unary_unary(
                '/main.WorkFlow/GetAllRole',
                request_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
                response_deserializer=workflow__pb2.Roles.FromString,
                )
        self.DeleteRole = channel.unary_unary(
                '/main.WorkFlow/DeleteRole',
                request_serializer=workflow__pb2.RoleId.SerializeToString,
                response_deserializer=workflow__pb2.StatusResponse.FromString,
                )
        self.CreateThreshold = channel.unary_unary(
                '/main.WorkFlow/CreateThreshold',
                request_serializer=workflow__pb2.RoleThreshold.SerializeToString,
                response_deserializer=workflow__pb2.StatusResponse.FromString,
                )
        self.GetRoleThreshold = channel.unary_unary(
                '/main.WorkFlow/GetRoleThreshold',
                request_serializer=workflow__pb2.RoleId.SerializeToString,
                response_deserializer=workflow__pb2.RoleThreshold.FromString,
                )
        self.GetAllRoleThreshold = channel.unary_unary(
                '/main.WorkFlow/GetAllRoleThreshold',
                request_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
                response_deserializer=workflow__pb2.AllRoleThresholds.FromString,
                )
        self.GetRoleNames = channel.unary_unary(
                '/main.WorkFlow/GetRoleNames',
                request_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
                response_deserializer=workflow__pb2.RoleNames.FromString,
                )
        self.GetUserDetails = channel.unary_unary(
                '/main.WorkFlow/GetUserDetails',
                request_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
                response_deserializer=workflow__pb2.Users.FromString,
                )
        self.AssignRoletoUser = channel.unary_unary(
                '/main.WorkFlow/AssignRoletoUser',
                request_serializer=workflow__pb2.RoletoUser.SerializeToString,
                response_deserializer=workflow__pb2.StatusResponse.FromString,
                )
        self.AssignRoletoUserGroup = channel.unary_unary(
                '/main.WorkFlow/AssignRoletoUserGroup',
                request_serializer=workflow__pb2.RoletoUsergroup.SerializeToString,
                response_deserializer=workflow__pb2.StatusResponse.FromString,
                )
        self.GetUserforRole = channel.unary_unary(
                '/main.WorkFlow/GetUserforRole',
                request_serializer=workflow__pb2.RoleId.SerializeToString,
                response_deserializer=workflow__pb2.Users.FromString,
                )
        self.AssignAttributestoUser = channel.unary_unary(
                '/main.WorkFlow/AssignAttributestoUser',
                request_serializer=workflow__pb2.AttributetoUser.SerializeToString,
                response_deserializer=workflow__pb2.StatusResponse.FromString,
                )
        self.AssignAttributeGroupstoUser = channel.unary_unary(
                '/main.WorkFlow/AssignAttributeGroupstoUser',
                request_serializer=workflow__pb2.AttributeGrouptoUser.SerializeToString,
                response_deserializer=workflow__pb2.StatusResponse.FromString,
                )
        self.AssignPermissionToRole = channel.unary_unary(
                '/main.WorkFlow/AssignPermissionToRole',
                request_serializer=workflow__pb2.RolePermissions.SerializeToString,
                response_deserializer=workflow__pb2.StatusResponse.FromString,
                )
        self.GetRolePermissions = channel.unary_unary(
                '/main.WorkFlow/GetRolePermissions',
                request_serializer=workflow__pb2.RoleId.SerializeToString,
                response_deserializer=workflow__pb2.RolePermissions.FromString,
                )
        self.UpdateRolePermissions = channel.unary_unary(
                '/main.WorkFlow/UpdateRolePermissions',
                request_serializer=workflow__pb2.RolePermissions.SerializeToString,
                response_deserializer=workflow__pb2.StatusResponse.FromString,
                )
        self.DeleteRolePermissions = channel.unary_unary(
                '/main.WorkFlow/DeleteRolePermissions',
                request_serializer=workflow__pb2.RoleId.SerializeToString,
                response_deserializer=workflow__pb2.StatusResponse.FromString,
                )


class WorkFlowServicer(object):
    """Missing associated documentation comment in .proto file."""

    def CreateRole(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateRole(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetRole(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetAllRole(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteRole(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateThreshold(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetRoleThreshold(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetAllRoleThreshold(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetRoleNames(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetUserDetails(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def AssignRoletoUser(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def AssignRoletoUserGroup(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetUserforRole(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def AssignAttributestoUser(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def AssignAttributeGroupstoUser(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def AssignPermissionToRole(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetRolePermissions(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateRolePermissions(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteRolePermissions(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_WorkFlowServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'CreateRole': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateRole,
                    request_deserializer=workflow__pb2.Role.FromString,
                    response_serializer=workflow__pb2.StatusResponse.SerializeToString,
            ),
            'UpdateRole': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateRole,
                    request_deserializer=workflow__pb2.Role.FromString,
                    response_serializer=workflow__pb2.StatusResponse.SerializeToString,
            ),
            'GetRole': grpc.unary_unary_rpc_method_handler(
                    servicer.GetRole,
                    request_deserializer=workflow__pb2.RoleId.FromString,
                    response_serializer=workflow__pb2.RoleDetails.SerializeToString,
            ),
            'GetAllRole': grpc.unary_unary_rpc_method_handler(
                    servicer.GetAllRole,
                    request_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                    response_serializer=workflow__pb2.Roles.SerializeToString,
            ),
            'DeleteRole': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteRole,
                    request_deserializer=workflow__pb2.RoleId.FromString,
                    response_serializer=workflow__pb2.StatusResponse.SerializeToString,
            ),
            'CreateThreshold': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateThreshold,
                    request_deserializer=workflow__pb2.RoleThreshold.FromString,
                    response_serializer=workflow__pb2.StatusResponse.SerializeToString,
            ),
            'GetRoleThreshold': grpc.unary_unary_rpc_method_handler(
                    servicer.GetRoleThreshold,
                    request_deserializer=workflow__pb2.RoleId.FromString,
                    response_serializer=workflow__pb2.RoleThreshold.SerializeToString,
            ),
            'GetAllRoleThreshold': grpc.unary_unary_rpc_method_handler(
                    servicer.GetAllRoleThreshold,
                    request_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                    response_serializer=workflow__pb2.AllRoleThresholds.SerializeToString,
            ),
            'GetRoleNames': grpc.unary_unary_rpc_method_handler(
                    servicer.GetRoleNames,
                    request_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                    response_serializer=workflow__pb2.RoleNames.SerializeToString,
            ),
            'GetUserDetails': grpc.unary_unary_rpc_method_handler(
                    servicer.GetUserDetails,
                    request_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                    response_serializer=workflow__pb2.Users.SerializeToString,
            ),
            'AssignRoletoUser': grpc.unary_unary_rpc_method_handler(
                    servicer.AssignRoletoUser,
                    request_deserializer=workflow__pb2.RoletoUser.FromString,
                    response_serializer=workflow__pb2.StatusResponse.SerializeToString,
            ),
            'AssignRoletoUserGroup': grpc.unary_unary_rpc_method_handler(
                    servicer.AssignRoletoUserGroup,
                    request_deserializer=workflow__pb2.RoletoUsergroup.FromString,
                    response_serializer=workflow__pb2.StatusResponse.SerializeToString,
            ),
            'GetUserforRole': grpc.unary_unary_rpc_method_handler(
                    servicer.GetUserforRole,
                    request_deserializer=workflow__pb2.RoleId.FromString,
                    response_serializer=workflow__pb2.Users.SerializeToString,
            ),
            'AssignAttributestoUser': grpc.unary_unary_rpc_method_handler(
                    servicer.AssignAttributestoUser,
                    request_deserializer=workflow__pb2.AttributetoUser.FromString,
                    response_serializer=workflow__pb2.StatusResponse.SerializeToString,
            ),
            'AssignAttributeGroupstoUser': grpc.unary_unary_rpc_method_handler(
                    servicer.AssignAttributeGroupstoUser,
                    request_deserializer=workflow__pb2.AttributeGrouptoUser.FromString,
                    response_serializer=workflow__pb2.StatusResponse.SerializeToString,
            ),
            'AssignPermissionToRole': grpc.unary_unary_rpc_method_handler(
                    servicer.AssignPermissionToRole,
                    request_deserializer=workflow__pb2.RolePermissions.FromString,
                    response_serializer=workflow__pb2.StatusResponse.SerializeToString,
            ),
            'GetRolePermissions': grpc.unary_unary_rpc_method_handler(
                    servicer.GetRolePermissions,
                    request_deserializer=workflow__pb2.RoleId.FromString,
                    response_serializer=workflow__pb2.RolePermissions.SerializeToString,
            ),
            'UpdateRolePermissions': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateRolePermissions,
                    request_deserializer=workflow__pb2.RolePermissions.FromString,
                    response_serializer=workflow__pb2.StatusResponse.SerializeToString,
            ),
            'DeleteRolePermissions': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteRolePermissions,
                    request_deserializer=workflow__pb2.RoleId.FromString,
                    response_serializer=workflow__pb2.StatusResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'main.WorkFlow', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class WorkFlow(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def CreateRole(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/main.WorkFlow/CreateRole',
            workflow__pb2.Role.SerializeToString,
            workflow__pb2.StatusResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdateRole(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/main.WorkFlow/UpdateRole',
            workflow__pb2.Role.SerializeToString,
            workflow__pb2.StatusResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetRole(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/main.WorkFlow/GetRole',
            workflow__pb2.RoleId.SerializeToString,
            workflow__pb2.RoleDetails.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetAllRole(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/main.WorkFlow/GetAllRole',
            google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            workflow__pb2.Roles.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DeleteRole(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/main.WorkFlow/DeleteRole',
            workflow__pb2.RoleId.SerializeToString,
            workflow__pb2.StatusResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CreateThreshold(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/main.WorkFlow/CreateThreshold',
            workflow__pb2.RoleThreshold.SerializeToString,
            workflow__pb2.StatusResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetRoleThreshold(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/main.WorkFlow/GetRoleThreshold',
            workflow__pb2.RoleId.SerializeToString,
            workflow__pb2.RoleThreshold.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetAllRoleThreshold(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/main.WorkFlow/GetAllRoleThreshold',
            google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            workflow__pb2.AllRoleThresholds.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetRoleNames(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/main.WorkFlow/GetRoleNames',
            google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            workflow__pb2.RoleNames.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetUserDetails(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/main.WorkFlow/GetUserDetails',
            google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            workflow__pb2.Users.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def AssignRoletoUser(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/main.WorkFlow/AssignRoletoUser',
            workflow__pb2.RoletoUser.SerializeToString,
            workflow__pb2.StatusResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def AssignRoletoUserGroup(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/main.WorkFlow/AssignRoletoUserGroup',
            workflow__pb2.RoletoUsergroup.SerializeToString,
            workflow__pb2.StatusResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetUserforRole(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/main.WorkFlow/GetUserforRole',
            workflow__pb2.RoleId.SerializeToString,
            workflow__pb2.Users.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def AssignAttributestoUser(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/main.WorkFlow/AssignAttributestoUser',
            workflow__pb2.AttributetoUser.SerializeToString,
            workflow__pb2.StatusResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def AssignAttributeGroupstoUser(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/main.WorkFlow/AssignAttributeGroupstoUser',
            workflow__pb2.AttributeGrouptoUser.SerializeToString,
            workflow__pb2.StatusResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def AssignPermissionToRole(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/main.WorkFlow/AssignPermissionToRole',
            workflow__pb2.RolePermissions.SerializeToString,
            workflow__pb2.StatusResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetRolePermissions(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/main.WorkFlow/GetRolePermissions',
            workflow__pb2.RoleId.SerializeToString,
            workflow__pb2.RolePermissions.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdateRolePermissions(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/main.WorkFlow/UpdateRolePermissions',
            workflow__pb2.RolePermissions.SerializeToString,
            workflow__pb2.StatusResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DeleteRolePermissions(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/main.WorkFlow/DeleteRolePermissions',
            workflow__pb2.RoleId.SerializeToString,
            workflow__pb2.StatusResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
